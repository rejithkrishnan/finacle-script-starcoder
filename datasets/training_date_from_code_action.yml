- prompt: "Refactor the following SQL to use `urhk_dbSelectWithBind`: SELECT user_name, user_id FROM system_users WHERE user_id = 'ADMIN'"
  script: |-
    <--start
    BANCS.INPARAM.BINDVARS = "ADMIN"
    sv_s = "user_name,user_id|SELECT user_name, user_id FROM system_users WHERE user_id = ?SVAR"
    sv_r = urhk_dbSelectWithBind(sv_s)
    IF (BANCS.OUTPARAM.DB_ERRCODE == 0) THEN
        print(BANCS.OUTPARAM.user_name)
        print(BANCS.OUTPARAM.user_id)
    ELSE
        print("Database Error: " + BANCS.OUTPARAM.DB_ERRMSG)
    ENDIF
    end-->
- prompt: "Convert this SELECT statement into a cursor loop using `urhk_dbCursorOpenWithBind`: SELECT account_id FROM accounts WHERE branch_code = 'B05' AND status = 'ACTIVE'"
  script: |-
    <--start
    BANCS.INPARAM.BINDVARS = "B05|ACTIVE"
    sv_s = "account_id|SELECT account_id FROM accounts WHERE branch_code = ?SVAR AND status = ?SVAR"
    sv_r = urhk_dbCursorOpenWithBind(sv_s)
    IF (sv_r == 0) THEN
        sv_x = BANCS.OUTPARAM.DB_CURSOR_NUMBER
        sv_y = urhk_dbCursorFetch(sv_x)
        WHILE (sv_y == 0)
            PRINT(BANCS.OUTPARAM.account_id)
            sv_y = urhk_dbCursorFetch(sv_x)
        DO
        sv_z = urhk_dbCursorClose(sv_x)
        IF (sv_z == 0) THEN
            PRINT ("Database cursor closed successfully.")
        ELSE
            PRINT "Error: Failed to close database cursor."
        ENDIF
    ELSE
        PRINT "Error: Failed to open database cursor: " + BANCS.OUTPARAM.DB_ERRMSG
    ENDIF
    end-->
- prompt: "Refactor to a `dbSelectWithBind` call: SELECT COUNT(*) as total_count FROM transactions WHERE tran_date = '2025-07-07'"
  script: |-
    <--start
    BANCS.INPARAM.BINDVARS = "2025-07-07"
    sv_s = "total_count|SELECT COUNT(*) as total_count FROM transactions WHERE tran_date = ?SVAR"
    sv_r = urhk_dbSelectWithBind(sv_s)
    IF (BANCS.OUTPARAM.DB_ERRCODE == 0) THEN
        print(BANCS.OUTPARAM.total_count)
    ELSE
        print("Database Error: " + BANCS.OUTPARAM.DB_ERRMSG)
    ENDIF
    end-->
- prompt: "Convert to a `dbCursorOpenWithBind` loop, including the ORDER BY clause: SELECT customer_name FROM customers WHERE city = 'MUMBAI' ORDER BY customer_name"
  script: |-
    <--start
    BANCS.INPARAM.BINDVARS = "MUMBAI"
    sv_s = "customer_name|SELECT customer_name FROM customers WHERE city = ?SVAR ORDER BY customer_name"
    sv_r = urhk_dbCursorOpenWithBind(sv_s)
    IF (sv_r == 0) THEN
        sv_x = BANCS.OUTPARAM.DB_CURSOR_NUMBER
        sv_y = urhk_dbCursorFetch(sv_x)
        WHILE (sv_y == 0)
            PRINT(BANCS.OUTPARAM.customer_name)
            sv_y = urhk_dbCursorFetch(sv_x)
        DO
        sv_z = urhk_dbCursorClose(sv_x)
        IF (sv_z == 0) THEN
            PRINT ("Database cursor closed successfully.")
        ELSE
            PRINT "Error: Failed to close database cursor."
        ENDIF
    ELSE
        PRINT "Error: Failed to open database cursor: " + BANCS.OUTPARAM.DB_ERRMSG
    ENDIF
    end-->
- prompt: "Generate a `dbSelectWithBind` for this SQL with a numeric literal: SELECT balance FROM accounts WHERE account_id = 12345"
  script: |-
    <--start
    BANCS.INPARAM.BINDVARS = "12345"
    sv_s = "balance|SELECT balance FROM accounts WHERE account_id = ?NVAR"
    sv_r = urhk_dbSelectWithBind(sv_s)
    IF (BANCS.OUTPARAM.DB_ERRCODE == 0) THEN
        print(BANCS.OUTPARAM.balance)
    ELSE
        print("Database Error: " + BANCS.OUTPARAM.DB_ERRMSG)
    ENDIF
    end-->
- prompt: "Create a `dbSelectWithBind` for a long SQL statement that needs to be split into multiple lines: SELECT col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 FROM very_long_table_name_for_testing"
  script: |-
    <--start
    # No bind variables automatically detected. If needed, manually add: BANCS.INPARAM.BINDVARS = "value1|value2"
    sv_s = "col1,col2,col3,col4,col5,col6,col7,col8,col9,col10|SELECT " +
        "col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 FROM" +
        " very_long_table_name_for_testing"
    sv_r = urhk_dbSelectWithBind(sv_s)
    IF (BANCS.OUTPARAM.DB_ERRCODE == 0) THEN
        print(BANCS.OUTPARAM.col1)
        print(BANCS.OUTPARAM.col2)
        print(BANCS.OUTPARAM.col3)
        print(BANCS.OUTPARAM.col4)
        print(BANCS.OUTPARAM.col5)
        print(BANCS.OUTPARAM.col6)
        print(BANCS.OUTPARAM.col7)
        print(BANCS.OUTPARAM.col8)
        print(BANCS.OUTPARAM.col9)
        print(BANCS.OUTPARAM.col10)
    ELSE
        print("Database Error: " + BANCS.OUTPARAM.DB_ERRMSG)
    ENDIF
    end-->
- prompt: "Refactor the following SQL into a `dbCursorOpenWithBind` loop: SELECT tran_id FROM audit_log WHERE user_id = 'U101' and action_type = 'LOGIN' and tran_date > 20241231"
  script: |-
    <--start
    BANCS.INPARAM.BINDVARS = "U101|LOGIN|20241231"
    sv_s = "tran_id|SELECT tran_id FROM audit_log WHERE user_id = ?SVAR and action_type = ?SVAR and tran_date > ?NVAR"
    sv_r = urhk_dbCursorOpenWithBind(sv_s)
    IF (sv_r == 0) THEN
        sv_x = BANCS.OUTPARAM.DB_CURSOR_NUMBER
        sv_y = urhk_dbCursorFetch(sv_x)
        WHILE (sv_y == 0)
            PRINT(BANCS.OUTPARAM.tran_id)
            sv_y = urhk_dbCursorFetch(sv_x)
        DO
        sv_z = urhk_dbCursorClose(sv_x)
        IF (sv_z == 0) THEN
            PRINT ("Database cursor closed successfully.")
        ELSE
            PRINT "Error: Failed to close database cursor."
        ENDIF
    ELSE
        PRINT "Error: Failed to open database cursor: " + BANCS.OUTPARAM.DB_ERRMSG
    ENDIF
    end-->
